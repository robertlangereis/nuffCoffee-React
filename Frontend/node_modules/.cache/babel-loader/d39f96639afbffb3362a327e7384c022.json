{"ast":null,"code":"import _defineProperty from \"/Users/robertlangereis/Google Drive/solo-projects/nuffcoffee-web/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_COFFEE, GET_COFFEES, UPDATE_COFFEE_SUCCESS } from '../actions/coffee';\nimport { USER_LOGOUT } from '../actions/users';\n/*\nThe state will contain the events in an object with the event ID as key\n*/\n\nexport default ((state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case USER_LOGOUT:\n      return null;\n\n    case ADD_COFFEE:\n      return _objectSpread({}, state, {\n        [payload.id]: payload\n      });\n\n    case UPDATE_COFFEE_SUCCESS:\n      return _objectSpread({}, state, {\n        [payload.id]: payload\n      });\n\n    case GET_COFFEES:\n      return payload.reduce((coffees, coffeetype) => {\n        console.log(coffees); // coffees[coffeetype.id] = coffeetype\n\n        return coffees;\n      }, {});\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/robertlangereis/Google Drive/solo-projects/nuffcoffee-web/Frontend/src/reducers/coffees.js"],"names":["ADD_COFFEE","GET_COFFEES","UPDATE_COFFEE_SUCCESS","USER_LOGOUT","state","type","payload","id","reduce","coffees","coffeetype","console","log"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,qBAAlC,QAA+D,mBAA/D;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA;;;;AAIA,gBAAe,CAACC,KAAK,GAAG,IAAT,EAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAf,KAAqC;AAClD,UAAQD,IAAR;AAEE,SAAKF,WAAL;AACE,aAAO,IAAP;;AAEF,SAAKH,UAAL;AACE,+BACKI,KADL;AAEE,SAACE,OAAO,CAACC,EAAT,GAAcD;AAFhB;;AAKF,SAAKJ,qBAAL;AACE,+BACKE,KADL;AAEE,SAACE,OAAO,CAACC,EAAT,GAAcD;AAFhB;;AAKF,SAAKL,WAAL;AACE,aAAOK,OAAO,CAACE,MAAR,CAAe,CAACC,OAAD,EAAUC,UAAV,KAAyB;AAC7CC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAD6C,CAE7C;;AACA,eAAOA,OAAP;AACD,OAJM,EAIJ,EAJI,CAAP;;AAKF;AACE,aAAOL,KAAP;AAxBJ;AA0BD,CA3BD","sourcesContent":["import { ADD_COFFEE, GET_COFFEES, UPDATE_COFFEE_SUCCESS } from '../actions/coffee'\nimport { USER_LOGOUT } from '../actions/users'\n\n/*\nThe state will contain the events in an object with the event ID as key\n*/\n\nexport default (state = null, { type, payload }) => {\n  switch (type) {\n\n    case USER_LOGOUT:\n      return null\n\n    case ADD_COFFEE:\n      return {\n        ...state,\n        [payload.id]: payload\n      }\n\n    case UPDATE_COFFEE_SUCCESS:\n      return {\n        ...state,\n        [payload.id]: payload\n      }\n\n    case GET_COFFEES:\n      return payload.reduce((coffees, coffeetype) => {\n        console.log(coffees)\n        // coffees[coffeetype.id] = coffeetype\n        return coffees\n      }, {})\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}