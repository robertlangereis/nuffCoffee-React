{"ast":null,"code":"import * as request from 'superagent';\nimport { baseUrl } from '../constants';\nimport { logout } from './users';\nimport { isExpired } from '../jwt';\nexport const ADD_COFFEE = 'ADD_COFFEE';\nexport const GET_COFFEES = 'GET_COFEEES';\nexport const GET_COFEEE = 'GET_COFEEE';\nexport const UPDATE_COFFEE_SUCCESS = 'UPDATE_COFEEE_SUCCESS';\n\nconst updateCoffees = coffees => ({\n  type: GET_COFFEES,\n  payload: coffees\n});\n\nconst updateCoffee = coffee => ({\n  type: GET_COFFEE,\n  payload: coffee\n});\n\nconst addCoffee = coffee => ({\n  type: ADD_COFFEE,\n  payload: coffee\n});\n\nconst coffeeUpdateSuccess = () => ({\n  type: UPDATE_COFFEE_SUCCESS\n}); // GET ALL COFFEES\n\n\nexport const getCoffees = () => (dispatch, getState) => {\n  if (getState().coffees) return;\n  request.get(\"\".concat(baseUrl, \"/coffee\")).then(result => {\n    dispatch(updateCoffees(result.body));\n  }).catch(err => console.error(err));\n}; // GET COFFEE BY ID\n\nexport const getCoffee = coffeeId => dispatch => {\n  request.get(\"\".concat(baseUrl, \"/coffees/\").concat(coffeeId)).then(response => {\n    if (response.ok) {\n      dispatch(updateCoffee(response.body));\n    } else {\n      return \"there was an error loading the coffee\";\n    }\n  }).catch(err => console.error(err));\n}; // CREATE COFFEEE LOG\n\nexport const createCoffee = (coffeeTypeId, time_added) => (dispatch, getState) => {\n  const state = getState();\n  const jwt = state.currentUser.jwt;\n  if (isExpired(jwt)) return dispatch(logout());\n  request.post(\"\".concat(baseUrl, \"/coffees\")).set('Authorization', \"Bearer \".concat(jwt)).send({\n    coffeeTypeId: 1,\n    time_added: 'datum'\n  }).then(result => {\n    if (result.ok) {\n      dispatch(addCoffee(result.body));\n    } else {\n      return \"there was an error creating this coffee log\";\n    }\n  }).catch(err => console.error(err));\n}; // ADJUST COFFEEE LOG\n\nexport const coffeeUpdate = (coffeeId, comments, beans) => (dispatch, getState) => {\n  const state = getState();\n  const jwt = state.currentUser.jwt;\n  if (isExpired(jwt)) return dispatch(logout());\n  request.patch(\"\".concat(baseUrl, \"/coffees/\").concat(coffeeId)).set('Authorization', \"Bearer \".concat(jwt)).send({\n    commentId\n  }).then(_ => dispatch(coffeeUpdateSuccess())).catch(err => console.error(err));\n};","map":{"version":3,"sources":["/Users/robertlangereis/Google Drive/solo-projects/nuffcoffee-web/Frontend/src/actions/coffee.js"],"names":["request","baseUrl","logout","isExpired","ADD_COFFEE","GET_COFFEES","GET_COFEEE","UPDATE_COFFEE_SUCCESS","updateCoffees","coffees","type","payload","updateCoffee","coffee","GET_COFFEE","addCoffee","coffeeUpdateSuccess","getCoffees","dispatch","getState","get","then","result","body","catch","err","console","error","getCoffee","coffeeId","response","ok","createCoffee","coffeeTypeId","time_added","state","jwt","currentUser","post","set","send","coffeeUpdate","comments","beans","patch","commentId","_"],"mappings":"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","sourcesContent":["import * as request from 'superagent'\nimport { baseUrl } from '../constants'\nimport { logout } from './users'\nimport { isExpired } from '../jwt'\n\nexport const ADD_COFFEE = 'ADD_COFFEE'\nexport const GET_COFFEES = 'GET_COFEEES'\nexport const GET_COFEEE = 'GET_COFEEE'\nexport const UPDATE_COFFEE_SUCCESS = 'UPDATE_COFEEE_SUCCESS'\n\nconst updateCoffees = coffees => ({\n  type: GET_COFFEES,\n  payload: coffees\n})\n\nconst updateCoffee = coffee => ({\n  type: GET_COFFEE,\n  payload: coffee\n})\n\nconst addCoffee = coffee => ({\n  type: ADD_COFFEE,\n  payload: coffee\n})\n\nconst coffeeUpdateSuccess = () => ({\n  type: UPDATE_COFFEE_SUCCESS\n})\n\n// GET ALL COFFEES\nexport const getCoffees = () => (dispatch, getState) => {\n  if (getState().coffees) return\n  request\n    .get(`${baseUrl}/coffee`)\n    .then(result => {\n      dispatch(updateCoffees(result.body))\n    })\n    .catch(err => console.error(err))\n}\n\n// GET COFFEE BY ID\nexport const getCoffee = (coffeeId) => (dispatch) => {\n  request\n    .get(`${baseUrl}/coffees/${coffeeId}`)\n    .then(response => {\n      if (response.ok) {\n        dispatch(updateCoffee(response.body))\n      }\n      else { return \"there was an error loading the coffee\" }\n    })\n    .catch(err => console.error(err))\n}\n\n// CREATE COFFEEE LOG\nexport const createCoffee = (coffeeTypeId, time_added) => (dispatch, getState) => {\n  const state = getState()\n  const jwt = state.currentUser.jwt\n  if (isExpired(jwt)) return dispatch(logout())\n  request\n    .post(`${baseUrl}/coffees`)\n    .set('Authorization', `Bearer ${jwt}`)\n    .send({\n      coffeeTypeId: 1,\n      time_added: 'datum'\n    })\n    .then(result => {\n      if (result.ok) {\n        dispatch(addCoffee(result.body))\n      }\n      else { return \"there was an error creating this coffee log\" }\n    })\n    .catch(err => console.error(err))\n}\n// ADJUST COFFEEE LOG\nexport const coffeeUpdate = (coffeeId, comments, beans) => (dispatch, getState) => {\n  const state = getState()\n  const jwt = state.currentUser.jwt\n\n  if (isExpired(jwt)) return dispatch(logout())\n\n  request\n    .patch(`${baseUrl}/coffees/${coffeeId}`)\n    .set('Authorization', `Bearer ${jwt}`)\n    .send({ commentId })\n    .then(_ => dispatch(coffeeUpdateSuccess()))\n    .catch(err => console.error(err))\n}\n"]},"metadata":{},"sourceType":"module"}