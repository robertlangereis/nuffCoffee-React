{"ast":null,"code":"import * as request from 'superagent';\nimport { baseUrl } from '../constants'; // import { logout } from './users'\n\nimport { isExpired } from '../jwt';\nexport const GET_COFFEETYPES = 'GET_COFFEETYPES';\nexport const GET_COFFEETYPE = 'GET_COFFEETYPE';\n\nconst updateCoffeeTypes = coffeetypes => ({\n  type: GET_COFFEETYPES,\n  payload: coffeetypes\n});\n\nconst updateCoffeeType = coffeetype => ({\n  type: GET_COFFEETYPE,\n  payload: coffeetype\n}); // GET ALL COFFEETYPES\n\n\nexport const getCoffeetypes = () => (dispatch, getState) => {\n  if (getState().coffees) return;\n  const state = getState();\n  const jwt = state.currentUser.jwt;\n  if (isExpired(jwt)) return dispatch(logout());\n  request.get(\"\".concat(baseUrl, \"/coffee\")).then(result => {\n    dispatch(updateCoffeeTypes(result.body));\n  }).catch(err => console.error(err));\n}; // GET COFFEETYPE BY ID\n\nexport const getCoffee = coffeeTypeId => dispatch => {\n  request.get(\"\".concat(baseUrl, \"/coffeetype/\").concat(coffeeTypeId)).then(response => {\n    if (response.ok) {\n      dispatch(updateCoffeeType(response.body));\n    } else {\n      return \"there was an error loading the coffee\";\n    }\n  }).catch(err => console.error(err));\n};","map":{"version":3,"sources":["/Users/robertlangereis/Google Drive/solo-projects/nuffcoffee-web/Frontend/src/actions/coffeeType.js"],"names":["request","baseUrl","isExpired","GET_COFFEETYPES","GET_COFFEETYPE","updateCoffeeTypes","coffeetypes","type","payload","updateCoffeeType","coffeetype","getCoffeetypes","dispatch","getState","coffees","state","jwt","currentUser","logout","get","then","result","body","catch","err","console","error","getCoffee","coffeeTypeId","response","ok"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CACA;;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;;AAEP,MAAMC,iBAAiB,GAAGC,WAAW,KAAK;AACxCC,EAAAA,IAAI,EAAEJ,eADkC;AAExCK,EAAAA,OAAO,EAAEF;AAF+B,CAAL,CAArC;;AAKA,MAAMG,gBAAgB,GAAGC,UAAU,KAAK;AACtCH,EAAAA,IAAI,EAAEH,cADgC;AAEtCI,EAAAA,OAAO,EAAEE;AAF6B,CAAL,CAAnC,C,CAKA;;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC1D,MAAIA,QAAQ,GAAGC,OAAf,EAAwB;AACxB,QAAMC,KAAK,GAAGF,QAAQ,EAAtB;AACA,QAAMG,GAAG,GAAGD,KAAK,CAACE,WAAN,CAAkBD,GAA9B;AACA,MAAId,SAAS,CAACc,GAAD,CAAb,EAAoB,OAAOJ,QAAQ,CAACM,MAAM,EAAP,CAAf;AACpBlB,EAAAA,OAAO,CACJmB,GADH,WACUlB,OADV,cAEGmB,IAFH,CAEQC,MAAM,IAAI;AACdT,IAAAA,QAAQ,CAACP,iBAAiB,CAACgB,MAAM,CAACC,IAAR,CAAlB,CAAR;AACD,GAJH,EAKGC,KALH,CAKSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CALhB;AAMD,CAXM,C,CAaP;;AACA,OAAO,MAAMG,SAAS,GAAIC,YAAD,IAAmBhB,QAAD,IAAc;AACvDZ,EAAAA,OAAO,CACJmB,GADH,WACUlB,OADV,yBACgC2B,YADhC,GAEGR,IAFH,CAEQS,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACflB,MAAAA,QAAQ,CAACH,gBAAgB,CAACoB,QAAQ,CAACP,IAAV,CAAjB,CAAR;AACD,KAFD,MAGK;AAAE,aAAO,uCAAP;AAAgD;AACxD,GAPH,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CARhB;AASD,CAVM","sourcesContent":["import * as request from 'superagent'\nimport { baseUrl } from '../constants'\n// import { logout } from './users'\nimport { isExpired } from '../jwt'\n\nexport const GET_COFFEETYPES = 'GET_COFFEETYPES'\nexport const GET_COFFEETYPE = 'GET_COFFEETYPE'\n\nconst updateCoffeeTypes = coffeetypes => ({\n  type: GET_COFFEETYPES,\n  payload: coffeetypes\n})\n\nconst updateCoffeeType = coffeetype => ({\n  type: GET_COFFEETYPE,\n  payload: coffeetype\n})\n\n// GET ALL COFFEETYPES\nexport const getCoffeetypes = () => (dispatch, getState) => {\n  if (getState().coffees) return\n  const state = getState()\n  const jwt = state.currentUser.jwt\n  if (isExpired(jwt)) return dispatch(logout())\n  request\n    .get(`${baseUrl}/coffee`)\n    .then(result => {\n      dispatch(updateCoffeeTypes(result.body))\n    })\n    .catch(err => console.error(err))\n}\n\n// GET COFFEETYPE BY ID\nexport const getCoffee = (coffeeTypeId) => (dispatch) => {\n  request\n    .get(`${baseUrl}/coffeetype/${coffeeTypeId}`)\n    .then(response => {\n      if (response.ok) {\n        dispatch(updateCoffeeType(response.body))\n      }\n      else { return \"there was an error loading the coffee\" }\n    })\n    .catch(err => console.error(err))\n}\n"]},"metadata":{},"sourceType":"module"}